var player;
var platforms;
var cursors;
var jumpButton;
var slime;
y = 150;

function create() {
    game.world.setBounds(0, 0, 2000, 800);
    player = game.add.sprite(100, 200, 'player');
    
    game.physics.arcade.enable(player);
    
    player.body.collideWorldBounds = true;
    player.body.gravity.y = 500;

    platforms = game.add.physicsGroup();

    platforms.create(game.rnd.integerInRange(-50, 200),y, 'platform');
    platforms.create(game.rnd.integerInRange(-50,250),y*2, 'platform');
    platforms.create(game.rnd.integerInRange(-50, 200),y*2+y, 'platform');
    platforms.create(game.rnd.integerInRange(-50, 250),y*4, 'platform');
    
    platforms.create(game.rnd.integerInRange(150, 400),y, 'platform');
    platforms.create(game.rnd.integerInRange(200,400),y*2, 'platform');
    platforms.create(game.rnd.integerInRange(150, 400),y*2+y, 'platform');
    platforms.create(game.rnd.integerInRange(200, 400),y*4, 'platform');
    
    platforms.create(game.rnd.integerInRange(350, 600),y, 'platform');
    platforms.create(game.rnd.integerInRange(400, 600),y*2, 'platform');
    platforms.create(game.rnd.integerInRange(400, 600),y*2+y, 'platform');
    platforms.create(game.rnd.integerInRange(300, 600),y*4, 'platform');
    
    platforms.create(game.rnd.integerInRange(550, 800),y, 'platform');
    platforms.create(game.rnd.integerInRange(600, 850),y*2, 'platform');
    platforms.create(game.rnd.integerInRange(550, 800),y*2+y, 'platform');
    platforms.create(game.rnd.integerInRange(600, 800),y*4, 'platform');
    
    platforms.create(game.rnd.integerInRange(850, 1000),y, 'platform');
    platforms.create(game.rnd.integerInRange(800, 1050),y*2, 'platform');
    platforms.create(game.rnd.integerInRange(800, 1050),y*2+y, 'platform');
    platforms.create(game.rnd.integerInRange(850, 1050),y*4, 'platform');
    
    platforms.create(game.rnd.integerInRange(1050, 1250),y, 'platform');
    platforms.create(game.rnd.integerInRange(1050, 1250),y*2, 'platform');
    platforms.create(game.rnd.integerInRange(1000, 1250),y*2+y, 'platform');
    platforms.create(game.rnd.integerInRange(1000, 1250),y*4, 'platform');
    
    platforms.create(game.rnd.integerInRange(1200, 1400),y, 'platform');
    platforms.create(game.rnd.integerInRange(1200, 1450),y*2, 'platform');
    platforms.create(game.rnd.integerInRange(1250, 1450),y*2+y, 'platform');
    platforms.create(game.rnd.integerInRange(1200, 1400),y*4, 'platform');
    
    platforms.create(game.rnd.integerInRange(1450, 1600),y, 'platform');
    platforms.create(game.rnd.integerInRange(1450, 1650),y*2, 'platform');
    platforms.create(game.rnd.integerInRange(1400, 1600),y*2+y, 'platform');
    platforms.create(game.rnd.integerInRange(1400, 1650),y*4, 'platform');
    
    platforms.create(game.rnd.integerInRange(1650, 1800),y, 'platform');
    platforms.create(game.rnd.integerInRange(1600, 1800),y*2, 'platform');
    platforms.create(game.rnd.integerInRange(1600, 1800),y*2+y, 'platform');
    platforms.create(game.rnd.integerInRange(1650, 1800),y*4, 'platform');
    
    platforms.create(game.rnd.integerInRange(1800, 1980),y, 'platform');
    platforms.create(game.rnd.integerInRange(1800, 1900),y*2, 'platform');
    platforms.create(game.rnd.integerInRange(1800, 1980),y*2+y, 'platform');
    platforms.create(game.rnd.integerInRange(1800, 1900),y*4, 'platform');
    
    
    platforms.setAll('body.immovable', true);

    cursors = game.input.keyboard.createCursorKeys();

   
    
    keyUp = game.input.keyboard.addKey(Phaser.Keyboard.W);
    keyDown = game.input.keyboard.addKey(Phaser.Keyboard.S);
    keyRight = game.input.keyboard.addKey(Phaser.Keyboard.D);
    keyLeft = game.input.keyboard.addKey(Phaser.Keyboard.A);


   
}

function fireBullet () {

    if (game.time.now > bulletTime)
    {
        //  Grab the first bullet we can from the pool
        lazer = lazers.getFirstDead(true, player.x + 24 * player.scale.x, player.y + 8, 'lazer');

        lazer.animations.add('fire', frames, 60);
        lazer.animations.frameName = 'frame02';

        lazer.scale.x = player.scale.x;

        if (lazer.scale.x === 1)
        {
            // lazer.anchor.x = 1;
        }
        else
        {
            // lazer.anchor.x = 0;
        }

        //  Lazers start out with a width of 96 and expand over time
        // lazer.crop(new Phaser.Rectangle(244-96, 0, 96, 2), true);

        bulletTime = game.time.now + 250;
    }

}

function updateBullets (lazer) {

    // if (game.time.now > frameTime)
    // {
    //     frameTime = game.time.now + 500;
    // }
    // else
    // {
    //     return;
    // }

    //  Adjust for camera scrolling
    var camDelta = game.camera.x - prevCamX;
    lazer.x += camDelta;

    if (lazer.animations.frameName !== 'frame30')
    {
        lazer.animations.next();
    }
    else
    {
        if (lazer.scale.x === 1)
        {
            lazer.x += 16;

            if (lazer.x > (game.camera.view.right - 224))
            {
                lazer.kill();
            }
        }
        else
        {
            lazer.x -= 16;

            if (lazer.x < (game.camera.view.left - 224))
            {
                lazer.kill();
            }
        }
    }

}
